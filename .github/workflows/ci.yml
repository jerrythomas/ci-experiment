name: publish

on:
  push:
    branches:
      - develop
      - 'release/v?[0-9].[0-9].[0-9]**'
    tags:
      - 'v?[0-9].[0-9].[0-9]**'
  pull_request:
    branches:
      - develop

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Version and env from branch
        if: github.ref_type == 'branch'
        run: |
          IMAGE_TAG=`echo "${{ github.ref }}" | cut -d/ -f3`
          VERSION_TAG=`echo "${{ github.ref }}" | cut -d/ -f4`
          VERSION_TAG=${VERSION_TAG:-$IMAGE_TAG}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV


      - name: Version and env from tag
        if: github.ref_type == 'tag'
        run: |
          VERSION_TAG=`echo "${{ github.ref }}" | cut -d/ -f3`
          IMAGE_TAG="prod"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

      - name: Build and push
        run: |
          if [ "${{env.IMAGE_TAG}}" = "prod" ]; then
             echo "pull VERSIoN TAG"
          else
             echo "build image for version tag and push"
          fi

          if [ "${VERSION_TAG}" != "${IMAGE_TAG}" ]; then
             echo "add image tag to container and push"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: show output
        run: |
           echo ${{ steps.login-ecr.outputs.registry }}
           echo ${{ secrets.APP_NAME }}
      # - name: Build, tag, and push docker image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: my-ecr-repo
      #   run: |
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
